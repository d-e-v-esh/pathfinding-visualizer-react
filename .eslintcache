[{"C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\index.js":"1","C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\reportWebVitals.js":"2","C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\App.js":"3","C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\components\\Board.js":"4","C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\components\\Node.jsx":"5","C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\store\\configureStore.js":"6","C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\store\\Node.js":"7","C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\utils\\nodeHelpers.js":"8"},{"size":611,"mtime":1608817456167,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":219,"mtime":1609506824423,"results":"12","hashOfConfig":"10"},{"size":1078,"mtime":1609504856739,"results":"13","hashOfConfig":"10"},{"size":1320,"mtime":1609508603806,"results":"14","hashOfConfig":"10"},{"size":181,"mtime":1608983958463,"results":"15","hashOfConfig":"10"},{"size":1787,"mtime":1609513284345,"results":"16","hashOfConfig":"10"},{"size":1476,"mtime":1608903362354,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"fakngb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\index.js",[],["38","39"],"C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\reportWebVitals.js",[],"C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\App.js",[],"C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\components\\Board.js",["40","41","42","43","44","45"],"// This file contains the board and the nodes rendering.\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../styles/Board.scss\";\r\nimport Node from \"./Node\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateGrid } from \"../store/Node\";\r\n\r\nconst Board = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { grid } = useSelector((state) => state);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {grid.map((row, rowIdx) => {\r\n        return (\r\n          <div key={rowIdx} className=\"grid-row\">\r\n            {row.map((node, nodeIdx) => {\r\n              const { row, col, isFinish, isStart, isWall } = node;\r\n              return (\r\n                <Node\r\n                  key={nodeIdx}\r\n                  row={row}\r\n                  col={col}\r\n                  // isFinish={isFinish}\r\n                  // isStart={isStart}\r\n                  // isWall={isWall}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\components\\Node.jsx",["46","47"],"import React from \"react\";\r\n\r\nimport \"../styles/Node.scss\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  mousePressed,\r\n  mouseNotPressed,\r\n  updateGrid,\r\n  makeWall,\r\n  breakWall,\r\n} from \"../store/Node\";\r\n\r\nconst Node = ({ col, row }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { grid, isMousePressed } = useSelector((state) => state);\r\n\r\n  // Mouse Handling Events\r\n\r\n  const handleMouseDown = (row, col) => {\r\n    dispatch(mousePressed());\r\n    // console.log(row, col);\r\n    dispatch(makeWall({ row, col }));\r\n  };\r\n\r\n  const handleMouseEnter = (row, col) => {\r\n    if (isMousePressed) {\r\n      dispatch(makeWall({ row, col }));\r\n    }\r\n    if (!isMousePressed) {\r\n      dispatch(mouseNotPressed());\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    dispatch(mouseNotPressed());\r\n  };\r\n\r\n  const singleNode = grid[row][col];\r\n  const extraClassName = singleNode.isWall\r\n    ? \"node-wall\"\r\n    : singleNode.isStart\r\n    ? \"node-start\"\r\n    : singleNode.isEnd\r\n    ? \"node-end\"\r\n    : \"\";\r\n  return (\r\n    <div\r\n      id={`node-${row}-${col}`}\r\n      className={`node ${extraClassName}`}\r\n      onMouseDown={() => handleMouseDown(row, col)}\r\n      onMouseEnter={() => handleMouseEnter(row, col)}\r\n      onMouseUp={() => handleMouseUp()}></div>\r\n  );\r\n};\r\n\r\nexport default Node;\r\n","C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\store\\configureStore.js",[],"C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\store\\Node.js",[],"C:\\Users\\Devesh\\Documents\\React_Projects\\pathfinding-visualizer-react\\src\\utils\\nodeHelpers.js",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":17,"nodeType":"56","messageId":"57","endLine":3,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":7,"column":10,"nodeType":"56","messageId":"57","endLine":7,"endColumn":20},{"ruleId":"54","severity":1,"message":"59","line":10,"column":9,"nodeType":"56","messageId":"57","endLine":10,"endColumn":17},{"ruleId":"54","severity":1,"message":"60","line":22,"column":33,"nodeType":"56","messageId":"57","endLine":22,"endColumn":41},{"ruleId":"54","severity":1,"message":"61","line":22,"column":43,"nodeType":"56","messageId":"57","endLine":22,"endColumn":50},{"ruleId":"54","severity":1,"message":"62","line":22,"column":52,"nodeType":"56","messageId":"57","endLine":22,"endColumn":58},{"ruleId":"54","severity":1,"message":"58","line":9,"column":3,"nodeType":"56","messageId":"57","endLine":9,"endColumn":13},{"ruleId":"54","severity":1,"message":"63","line":11,"column":3,"nodeType":"56","messageId":"57","endLine":11,"endColumn":12},{"ruleId":"50","replacedBy":"64"},{"ruleId":"52","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'updateGrid' is defined but never used.","'dispatch' is assigned a value but never used.","'isFinish' is assigned a value but never used.","'isStart' is assigned a value but never used.","'isWall' is assigned a value but never used.","'breakWall' is defined but never used.",["66"],["67"],"no-global-assign","no-unsafe-negation"]